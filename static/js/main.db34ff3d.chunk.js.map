{"version":3,"sources":["store/actions/actionTypes.js","store/actions/actions.js","todo/Form.js","todo/header.js","todo/TodoList.js","todo/index.js","store/reducers/index.js","index.js"],"names":["ADD_ITEM","EDIT_ITEM","DELETE_ITEM","SET_TITLE","SET_ITEM","SET_EDIT","SET_ERROR","setTitle","title","type","actionTypes","useStyles","makeStyles","root","marginTop","marginBottom","padding","boxShadow","button","connect","state","edit","error","dispatch","setError","addItem","editItem","item","classes","Container","maxWidth","className","Grid","container","alignItems","md","TextField","value","onChange","event","target","length","helperText","id","fullWidth","label","multiline","variant","Button","color","onClick","toolbar","textAlign","height","heading","margin","Header","AppBar","position","Typography","align","todoList","items","setItem","deleteItem","setEdit","List","map","ListItem","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","handleEdit","handleDelete","Todo","initialState","action","newItem","Date","now","concat","newList","index","indexOf","splice","store","createStore","reducer","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db34ff3d.chunk.js","sourcesContent":["export const ADD_ITEM = \"ADD_ITEM\";\nexport const EDIT_ITEM = \"EDIT_ITEM\";\nexport const DELETE_ITEM = \"DELETE_ITEM\";\n\nexport const SET_TITLE = \"SET_TITLE\";\nexport const SET_ITEM = \"SET_ITEM\";\nexport const SET_EDIT = \"SET_EDIT\";\nexport const SET_ERROR = \"SET_ERROR\"; ","import * as actionTypes from './actionTypes'\n\nexport const addItem = () => {\n    return{ \n        type: actionTypes.ADD_ITEM, \n    }\n}\n\nexport const deleteItem = (item) => {\n    return{ \n        type: actionTypes.DELETE_ITEM, \n        item: item \n    }\n}\n\nexport const editItem = (item) => {\n    return{ \n        type: actionTypes.EDIT_ITEM, \n        item: item \n    }\n}\nexport const setTitle = (title) => {\n    return{ \n        type: actionTypes.SET_TITLE, \n        title: title \n    }\n}\nexport const setError = (error) => {\n    return{ \n        type: actionTypes.SET_ERROR, \n        error: error \n    }\n}\nexport const setItem = (item) => {\n    return{ \n        type: actionTypes.SET_ITEM, \n        item: item \n    }\n}\nexport const setEdit = () => {\n    return{ \n        type: actionTypes.SET_EDIT\n    }\n}","\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid'\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button'\nimport { connect } from 'react-redux'\nimport * as actionTypes from '../store/actions/actions';\nconst useStyles = makeStyles({\n    root: {\n        marginTop: 16,\n        marginBottom: 16,\n        padding: 16,\n        boxShadow: \"0px 3px 5px -1px rgba(0,0,0,0.2), 0px 6px 10px 0px rgba(0,0,0,0.14), 0px 1px 18px 0px rgba(0,0,0,0.12)\"\n    },\n    button: {\n        marginTop: 16\n    }\n});\n\nconst Form = ({ title, setTitle, addItem, editItem, edit, error, setError }) => {\n    const classes = useStyles();\n    const handleChange = (event) => {\n        const title = event.target.value;\n        \n        setTitle(title);\n        if(title.length === 0){\n            setError(\"Please enter title\");\n        }else{\n            setError(\"\");\n        }\n    }\n\n    const handleClick = () => {\n        if(title.length === 0){\n            setError(\"Please enter title\");\n            return;\n        }\n        if (edit) {\n            editItem();\n        } else {\n            addItem();\n        }\n    }\n    return (\n        <Container maxWidth=\"sm\" className={classes.root}>\n            <Grid container alignItems=\"center\">\n                <Grid item md={12}>\n                    <TextField value={title} onChange={handleChange} \n                    error={!!error} helperText={error} id=\"outlined-basic\" fullWidth label=\"Enter Title\" multiline variant=\"outlined\" />\n                </Grid>\n                <Grid item md={12}>\n                    <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleClick}>\n                        {edit ? \"Edit\" : \"Add\"}\n                    </Button>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\nconst mapStateToProps = (state) => {\n    return {\n        title: state.title,\n        edit: state.edit,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setTitle: (title) => dispatch(actionTypes.setTitle(title)),\n        setError: (error) => dispatch(actionTypes.setError(error)),\n        addItem: () => dispatch(actionTypes.addItem()),\n        editItem: () => dispatch(actionTypes.editItem()),\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  toolbar: {\n    textAlign: \"center\",\n    height: 80\n  },\n  heading: {\n    margin: \"auto\",\n  }\n});\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <ToolBar className={classes.toolbar}>\n        <Typography className={classes.heading} variant=\"h5\" align=\"center\">\n          Todo App\n        </Typography>\n      </ToolBar>\n    </AppBar>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { connect } from 'react-redux'\nimport * as actionTypes from '../store/actions/actions';\n\nconst useStyles = makeStyles({\n    container: {\n        padding: 16\n    }\n});\n\nfunction TodoList({ todoList, setTitle, setItem, setEdit, deleteItem }) {\n    const classes = useStyles();\n\n    const handleEdit = (item) => {\n        setTitle(item.value);\n        setEdit();\n        setItem(item);\n    }\n\n    const handleDelete = (item) => {\n        setItem(item);\n        deleteItem();\n    }\n    return (\n        <Container className={classes.container} maxWidth=\"md\">\n            {!todoList.length\n                ?\n                <Typography variant=\"h6\" color=\"error\">No Data to display</Typography>\n                :\n                (<List>\n                    {todoList.map(item => {\n                        return (\n                            <ListItem key={item.id} button>\n                                <ListItemIcon>\n                                    <CheckCircleIcon color=\"primary\" />\n                                </ListItemIcon>\n\n                                <ListItemText primary={item.value} />\n                                <ListItemSecondaryAction>\n                                    <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => handleEdit(item)}>\n                                        <EditIcon />\n                                    </IconButton>\n                                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleDelete(item)}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        )\n                    })}\n                </List>)\n            }\n        </Container>\n    )\n\n}\nconst mapStateToProps = (state) => {\n    return {\n        todoList: state.items\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setTitle: (title) => dispatch(actionTypes.setTitle(title)),\n        setItem: (item) => dispatch(actionTypes.setItem(item)),\n        deleteItem: (item) => dispatch(actionTypes.deleteItem(item)),\n        setEdit: () => dispatch(actionTypes.setEdit()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Form from './Form';\nimport Header from './header';\nimport TodoList from './TodoList';\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: \"center\",\n        height: \"100%\"\n    }\n});\nfunction Todo() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Header />\n            <Form />\n            <TodoList />\n        </div>\n    )\n\n}\nexport default Todo;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  items: [],\n  title: \"\",\n  item: \"\",\n  edit: false,\n  error: \"\"\n}\n\nconst items = (state = initialState, action) => {\n  switch(action.type) {\n    case actionTypes.ADD_ITEM:\n      const newItem = {\n        id: Date.now(),\n        value: state.title,\n      }\n      return {\n        ...state,\n        items: state.items.concat(newItem),\n        title: \"\",\n        error: \"\",\n      }\n    case actionTypes.EDIT_ITEM:\n      var newList = [...state.items];\n      var index = newList.indexOf(state.item);\n      if(index !== -1) {\n        newList[index].value = state.title;\n        return {\n          ...state,\n          title: \"\",\n          edit: false,\n          items: newList,\n          error: \"\"\n        }\n      } else {\n        return {\n          ...state,\n        }\n      }\n    case actionTypes.DELETE_ITEM:\n      newList = [...state.items];\n      index = newList.indexOf(state.item);\n      if(index !== -1) {\n        newList.splice(index, 1);\n        return {\n          ...state,\n          items: newList,\n        }\n      } else {\n        return {\n          ...state,\n        }\n      }\n    case actionTypes.SET_TITLE:\n      return {\n        ...state,\n        title: action.title,\n      }\n    case actionTypes.SET_ITEM:\n      return {\n        ...state,\n        item: action.item,\n        error: \"\"\n      }\n    case actionTypes.SET_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      }\n    case actionTypes.SET_EDIT:\n      return {\n        ...state,\n        edit: true,\n        error: \"\",\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default items;","import ReactDOM from 'react-dom';\nimport Todo from './todo/index'\nimport { Provider } from 'react-redux'\nimport reducer from './store/reducers/index'\nimport { createStore } from 'redux';\nconst store = createStore(reducer);\nconst app = (\n  <Provider store={store}>\n      <Todo />\n  </Provider>\n);\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}